#define _CRT_SECURE_NO_WARNINGS 1   //像scanf这类函数不具有安全性，因为如果输出的值超出预计范围无法识别 （大概是这个意思） 解决方案1在源文件的第一行加入这串代码
                                                                                                      解决方案2找到newc++file.cpp这个文件将此代码放入
                                                                                                      解决方案3将不安全的scanf改为scanf_s(scanf_s是vs编译器的所有不具有跨平台性)
int main（）
{
   //1；//都为常数变量
   //2.25616；//说白了就是个数，到这结束的


  // int n = 10;
	//printf("%d/n", n);
	//n = 100;
	//printf("%d/n", n);//这串代码最后会显示出 10 和100
   
           那我们引入const--常属性试试 
  //const int n = 10;           //      此时n为具有常属性的变量，而下面将100又赋值给n语法肯定会报错
  //printf("%d/n", n);      //那么可以看出给变量加上const便具有稳定的属性
	//n = 100;
	//printf("%d/n", n);  
          那么引出下个问题 const int n=10；到底是常量还是变量呢？用以下两代码来对比解释
// int n=10；       
// int arr[n]=0；//此时这个代码会报错会说这一行应该填常量才行，这一操作说明了n为变量 
         好的接下来我们想const具有常属性那我们有了这一想法写出下面的代码试试
 //const int n=10；       
 //int arr[n]=0 ；//我们发现还是会报错好家伙这不就说明了虽然n有了常属性但本质还是变量  
 
      #define定义的标识符号常量
      
      
      
      
      
      
      
      枚举常量
  
  
     
  
   


return 0；
}
